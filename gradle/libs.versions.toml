[versions]
compileSdk = "34"
minSdk = "28"
targetSdk = "34"

kotlin = "2.0.0"
compose = "1.6.10"
compose-compiler = "1.5.11"
essenty = "2.0.0"
agp = "8.2.2"
androidx-activityCompose = "1.9.0"
androidx-uiTest = "1.6.7"
decompose = "3.0.0"
composeImageLoader = "1.7.8"
napier = "2.7.1"
kotlinx-coroutines = "1.8.1"
ktor = "2.3.9"
kotlinx-serialization = "1.6.3"
kotlinx-datetime = "0.6.0"
koin = "3.5.6"
datastore = "1.1.1"
mvikotlin = "4.0.0"
moko-resources = "0.24.0-beta-5"
cupertino = "0.1.0-alpha04"

ksp = "2.0.0-1.0.21"

ktorfit = "2.0.0"
ktorfit-plugin = "2.0.0"

androidx-camera = "1.3.0"

[libraries]


# Compose libraries
compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "compose" }
compose-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "compose" }
compose-icons-extended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "compose" }
compose-resources = { module = "org.jetbrains.compose.components:components-resources", version.ref = "compose" }
compose-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "compose" }
androidx-compose-bom = "androidx.compose:compose-bom:2024.05.00"

# MVIKotlin
mvikotlin = { module = "com.arkivanov.mvikotlin:mvikotlin", version.ref = "mvikotlin" }
mvikotlin-main = { module = "com.arkivanov.mvikotlin:mvikotlin-main", version.ref = "mvikotlin" }
mvikotlin-extensions = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines", version.ref = "mvikotlin" }

androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-testManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-uiTest" }
androidx-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-uiTest" }

decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
essenty = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }
essenty-backHandler = { group = "com.arkivanov.essenty", name = "back-handler", version.ref = "essenty" }

cupertino-decompose = { module = "io.github.alexzhirkevich:cupertino-decompose", version.ref = "cupertino"}
cupertino = { module = "io.github.alexzhirkevich:cupertino", version.ref = "cupertino" }
cupertino-native = { module = "io.github.alexzhirkevich:cupertino-native", version.ref = "cupertino" }

composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "composeImageLoader" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }

ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-androidx-compose = { group = "io.insert-koin", name = "koin-androidx-compose", version.ref = "koin" }

#datastore
datastore-core = { module = "androidx.datastore:datastore", version.ref="datastore" }
datastore = { module = "androidx.datastore:datastore-preferences", version.ref="datastore" }

#moko
moko-resources = { module = "dev.icerock.moko:resources", version.ref="moko-resources" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref="moko-resources" }

#androidx camera
androidx-camera = { module = "androidx.camera:camera-camera2", version.ref = "androidx-camera" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "androidx-camera" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "androidx-camera" }

# Gradle plugins
compose-gradle-plugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose" }
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
moko-resources-generator = { module = "dev.icerock.moko:resources-generator", version.ref = "moko-resources" }

jensklingenberg-ktorfit = { group = "de.jensklingenberg.ktorfit", name = "ktorfit-lib", version.ref = "ktorfit" }

[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-main = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose-jb = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
moko-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-resources" }


ktorfit = { id = "de.jensklingenberg.ktorfit", version.ref = "ktorfit-plugin" }

# Convention app
eetk-compose-multiplatform = { id = "eetk.compose-multiplatform", version = "unspecified" }
eetk-kmplibrary = { id = "eetk.kmplibrary", version = "unspecified" }

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
